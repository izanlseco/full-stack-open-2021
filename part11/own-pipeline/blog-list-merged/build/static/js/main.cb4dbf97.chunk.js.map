{"version":3,"sources":["components/Blog.js","components/Notification.js","components/BlogForm.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","like","deleteBlog","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","padding","paddingLeft","border","borderWidth","marginBottom","className","title","author","id","onClick","url","likes","undefined","user","name","Notification","type","message","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","addBlog","event","a","preventDefault","blogObject","onSubmit","value","onChange","target","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","baseUrl","token","setToken","newToken","getAll","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","put","delete","login","credentials","App","blogs","setBlogs","username","setUsername","password","setPassword","setUser","setMessage","messageType","setMessageType","blogFormRef","useRef","useEffect","blogService","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","setTimeout","handleReset","removeItem","current","returnedBlog","concat","handleUpdateLike","blogToUpdate","find","b","updatedBlog","map","handleDeleteBlog","confirm","filter","sort","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb4dbf97.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = ({ blog, like, deleteBlog }) => {\n  const [visible, setVisible] = useState(null)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const blogStyle = {\n    padding: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  return (\n    <div style={blogStyle}>\n      <div className='blog-default' style={hideWhenVisible}>\n        {blog.title} {blog.author}<button id=\"show-button\" onClick={toggleVisibility}>view</button>\n      </div>\n      <div className='blog-expanded' style={showWhenVisible}>\n        {blog.title} {blog.author} <button id=\"hide-button\" onClick={toggleVisibility}>hide</button><br/>\n        {blog.url} <br />\n        <span id=\"likes\">{blog.likes}</span> <button id=\"like-button\" onClick={like}>like</button> <br/>\n        {blog.user !== undefined ? blog.user.name : ''} <br />\n        <button id=\"delete-button\" onClick={deleteBlog}>remove</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n","import React from 'react'\n\nconst Notification = ({ type, message }) => {\n  if (message === null) {\n    return null\n  }\n\n  if (type === 'info') {\n    return (\n      <div className='info'>\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\n\nconst BlogForm = ({ createBlog }) => {\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    }\n\n    await createBlog(blogObject)\n\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog}>\n      <div>\n          title:\n        <input\n          id=\"title\"\n          type=\"text\"\n          value={newTitle}\n          name=\"Title\"\n          onChange={({ target }) => setNewTitle(target.value)}\n        />\n      </div>\n      <div>\n          author:\n        <input\n          id=\"author\"\n          type=\"text\"\n          value={newAuthor}\n          name=\"Author\"\n          onChange={({ target }) => setNewAuthor(target.value)}\n        />\n      </div>\n      <div>\n          url:\n        <input\n          id=\"url\"\n          type=\"text\"\n          value={newUrl}\n          name=\"Url\"\n          onChange={({ target }) => setNewUrl(target.value)}\n        />\n      </div>\n      <button id=\"create-blog\" type=\"onSubmit\">create</button>\n    </form>\n  )\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(null)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button id={props.buttonLabel} onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Toggable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\n\nexport default Togglable\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst deleteBlog = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { setToken, getAll, create, update, deleteBlog }\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState(null)\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setMessageType('error')\n      setMessage('Wrong user or password')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleReset = (event) => {\n    event.preventDefault()\n\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n\n  const addBlog = async (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    const returnedBlog = await blogService.create(blogObject)\n\n    setMessageType('info')\n    setMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n\n    setBlogs(blogs.concat(returnedBlog))\n  }\n\n  const handleUpdateLike = async (id) => {\n    const blogToUpdate = blogs.find(b => b.id === id)\n\n    const newObject = {\n      user: blogToUpdate.user,\n      likes: blogToUpdate.likes + 1,\n      author: blogToUpdate.author,\n      title: blogToUpdate.title,\n      url: blogToUpdate.url,\n    }\n\n    const updatedBlog = await blogService.update(id, newObject)\n\n    setBlogs(blogs.map(blog => blog.id !== id ? blog : updatedBlog))\n  }\n\n  const handleDeleteBlog = async (id) => {\n    if (window.confirm('Do you really want to delete the blog?')){\n      await blogService.deleteBlog(id)\n      setBlogs(blogs.filter(blog => blog.id !== id))\n    }\n  }\n\n  const loginForm = () => (\n    <div>\n      <Notification\n        type={messageType}\n        message={message}\n      />\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n\n  const blogList = () => (\n    <div>\n      <h2>blogs</h2>\n      <Notification\n        type={messageType}\n        message={message}\n      />\n      <form onSubmit={handleReset}>\n        <p>{user.name} logged-in<button id=\"logout-button\" type=\"submit\">logout</button></p>\n      </form>\n      <h2>create new</h2>\n      <Togglable\n        id='new-blog'\n        buttonLabel='create new blog'\n        ref={blogFormRef}\n      >\n        <BlogForm createBlog={addBlog} />\n      </Togglable>\n      {blogs\n        .sort((a, b) => a.likes < b.likes)\n        .map(blog =>\n          <Blog\n            key={blog.id}\n            blog={blog}\n            like={() => handleUpdateLike(blog.id)}\n            deleteBlog={() => handleDeleteBlog(blog.id)}\n          />\n        )}\n    </div>\n  )\n\n  return (\n    <div>\n      {user === null ?\n        loginForm() :\n        blogList()\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}