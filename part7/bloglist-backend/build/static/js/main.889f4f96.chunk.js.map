{"version":3,"sources":["services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/Blog/BlogDetail/BlogDetail.js","components/Blog/Blog.js","components/Togglable.js","components/Blog/BlogForm/BlogForm.js","components/Blog/BlogList/BlogList.js","components/Notification.js","reducers/loginReducer.js","components/Header.js","services/login.js","components/LoginForm/LoginForm.js","components/UserTable/User.js","components/UserTable/UserTable.js","services/users.js","reducers/userReducer.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","createComment","id","console","log","update","put","deleteBlog","delete","setToken","newToken","setNotification","message","timeout","dispatch","type","setTimeout","reducer","state","action","createBlog","blogObject","blogService","newBlog","title","author","updateBlogs","updatedBlogs","BlogDetail","blogs","useDispatch","history","useHistory","useState","comment","setComment","matchByBlog","useRouteMatch","matchedBlog","find","blog","params","handleUpdateLike","blogToUpdate","b","user","likes","url","updatedBlog","map","handleDeleteBlog","window","confirm","filter","push","handleComment","event","preventDefault","commentObject","Typography","variant","href","Button","onClick","undefined","name","color","onSubmit","TextField","value","onChange","target","comments","Blog","to","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","BlogForm","blogFormRef","useRef","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","addBlog","current","label","BlogList","TableContainer","component","Paper","Table","TableBody","sort","TableRow","TableCell","Notification","Alert","severity","setUser","Header","handleReset","localStorage","removeItem","AppBar","position","Toolbar","Link","login","credentials","LoginForm","useSelector","notifications","username","setUsername","password","setPassword","handleLogin","loginService","setItem","JSON","stringify","User","matchByUser","blogsByUser","Grid","container","spacing","item","xs","md","List","dense","ListItem","ListItemText","primary","Users","users","TableHead","length","getUsers","App","useEffect","userService","loggedUserJSON","getItem","parse","Container","path","UserTable","combineReducers","blogReducer","notificationReducer","loginReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.889f4f96.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst createComment = async (id, newObject) => {\n  console.log('service', newObject)\n  const response = await axios.post(`${baseUrl}/${id}/comments`, newObject)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst deleteBlog = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  console.log(config)\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { setToken, getAll, create, createComment, update, deleteBlog }\n","const reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_NOTI':\n      return action.data\n    case 'CLEAR_NOTI':\n      return null\n    default:\n      return state\n  }\n}\n\nconst clearInfo = () => {\n  return {\n    type: 'CLEAR_NOTI',\n  }\n}\n\nexport const setNotification = (message, timeout) => {\n  return async (dispatch) => {\n    await dispatch({\n      type: 'SET_NOTI',\n      data: message,\n    })\n    setTimeout(() => {\n      dispatch(clearInfo())\n    }, timeout * 1000)\n  }\n}\n\nexport default reducer\n","import blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOG':\n      return action.data\n    case 'NEW_BLOG':\n      return [...state, action.data]\n    case 'UPDATE_BLOG':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOG',\n      data: blogs,\n    })\n  }\n}\n\nexport const createBlog = (blogObject) => {\n  return async (dispatch) => {\n    const newBlog = await blogService.create(blogObject)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n    dispatch(\n      setNotification(\n        `a new blog ${blogObject.title} by ${blogObject.author} added`,\n        5\n      )\n    )\n  }\n}\n\nexport const updateBlogs = (updatedBlogs) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'UPDATE_BLOG',\n      data: updatedBlogs,\n    })\n  }\n}\nexport default reducer\n","import { Button, TextField, Typography } from '@material-ui/core'\n/* eslint-disable indent */\nimport React, { useState } from 'react'\nimport { useHistory, useRouteMatch } from 'react-router-dom'\n\nimport blogService from '../../../services/blogs'\nimport { updateBlogs } from '../../../reducers/blogReducer'\nimport { useDispatch } from 'react-redux'\n\nconst BlogDetail = ({ blogs }) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [comment, setComment] = useState('')\n\n  const matchByBlog = useRouteMatch('/blogs/:id')\n  const matchedBlog = matchByBlog\n    ? blogs.find((blog) => blog.id === matchByBlog.params.id)\n    : null\n\n  const handleUpdateLike = async (id) => {\n    const blogToUpdate = blogs.find((b) => b.id === id)\n\n    const newObject = {\n      user: blogToUpdate.user,\n      likes: blogToUpdate.likes + 1,\n      author: blogToUpdate.author,\n      title: blogToUpdate.title,\n      url: blogToUpdate.url,\n    }\n\n    const updatedBlog = await blogService.update(id, newObject)\n\n    dispatch(\n      updateBlogs(\n        blogs.map((blog) => (blog.id !== id ? blog : updatedBlog))\n      )\n    )\n  }\n\n  const handleDeleteBlog = async (id) => {\n    console.log(id)\n    if (window.confirm('Do you really want to delete the blog?')) {\n      await blogService.deleteBlog(id)\n      dispatch(updateBlogs(blogs.filter((blog) => blog.id !== id)))\n      history.push('/')\n    }\n  }\n\n  const handleComment = async (event) => {\n    event.preventDefault()\n\n    const commentObject = {\n      comment: comment,\n    }\n\n    await blogService.createComment(matchedBlog.id, commentObject)\n    setComment('')\n  }\n\n  if (!matchedBlog) {\n    return null\n  }\n\n  return (\n    <div>\n      <div>\n        <Typography variant=\"h6\">\n          {matchedBlog.title} by {matchedBlog.author}\n        </Typography>\n        <a href={matchedBlog.url}>{matchedBlog.url}</a> <br />\n        <span id=\"likes\">{matchedBlog.likes}</span>\n        <Button\n          id=\"like-button\"\n          onClick={() => handleUpdateLike(matchedBlog.id)}\n        >\n          like\n        </Button>{' '}\n        <br />\n        added by {matchedBlog.user !== undefined\n          ? matchedBlog.user.name\n          : ''}{' '}\n        <br />\n        <Button\n          color =\"secondary\"\n          id=\"delete-button\"\n          onClick={() => handleDeleteBlog(matchedBlog.id)}\n        >\n          remove\n        </Button>\n      </div>\n      <div>\n        <Typography variant=\"h6\">Comments</Typography>\n        <form onSubmit={() => handleComment()}>\n          <TextField\n            id=\"comment-input\"\n            type=\"text\"\n            value={comment}\n            name=\"Comment\"\n            onChange={({ target }) => setComment(target.value)}\n          />\n          <Button\n            id=\"comment-button\"\n            type=\"onSubmit\">\n            add comment\n          </Button>\n        </form>\n        <ul>\n          {matchedBlog.comments\n            ? matchedBlog.comments.map((comment) => (\n                <li key={comment.id}>{comment.comment}</li>\n              ))\n            : null}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default BlogDetail\n","import { Link } from 'react-router-dom'\nimport React from 'react'\n\nconst Blog = ({ blog }) => {\n  return (\n    <Link to={`/blogs/${blog.id}`}>\n      {blog.title} {blog.author}\n    </Link>\n  )\n}\n\nexport default Blog\n","import React, { useImperativeHandle, useState } from 'react'\n\nimport {\n  Button\n} from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(null)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button id={props.buttonLabel} onClick={toggleVisibility}>\n          {props.buttonLabel}\n        </Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Toggable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\n\nexport default Togglable\n","import {\n  Button,\n  TextField\n} from '@material-ui/core'\nimport React, { useRef, useState } from 'react'\n\nimport Togglable from '../../Togglable'\nimport { createBlog } from '../../../reducers/blogReducer'\nimport { useDispatch } from 'react-redux'\n\nconst BlogForm = () => {\n  const dispatch = useDispatch()\n  const blogFormRef = useRef()\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    }\n\n    dispatch(createBlog(blogObject))\n    blogFormRef.current.toggleVisibility()\n\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <Togglable id=\"new-blog\" buttonLabel=\"create new blog\" ref={blogFormRef}>\n      <form onSubmit={addBlog}>\n        <div>\n          <TextField\n            id=\"title\"\n            type=\"text\"\n            value={newTitle}\n            name=\"Title\"\n            label=\"Title\"\n            onChange={({ target }) => setNewTitle(target.value)}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"author\"\n            type=\"text\"\n            value={newAuthor}\n            name=\"Author\"\n            label=\"Author\"\n            onChange={({ target }) => setNewAuthor(target.value)}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"url\"\n            type=\"text\"\n            value={newUrl}\n            name=\"Url\"\n            label=\"Url\"\n            onChange={({ target }) => setNewUrl(target.value)}\n          />\n        </div>\n        <Button id=\"create-blog\" type=\"onSubmit\">\n          create\n        </Button>\n      </form>\n    </Togglable>\n  )\n}\n\nexport default BlogForm\n","/* eslint-disable indent */\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@material-ui/core'\n\nimport Blog from '../Blog'\nimport BlogForm from '../BlogForm/BlogForm'\nimport React from 'react'\n\nconst BlogList = ({ blogs }) => {\n  return (\n    <div>\n      <h2>Create new</h2>\n      <BlogForm />\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n            {blogs\n              ? blogs\n                  .sort((a, b) => a.likes < b.likes)\n                  .map((blog) =>\n                    <TableRow key ={blog.id}>\n                      <TableCell>\n                        <Blog key={blog.id} blog={blog} />\n                      </TableCell>\n                      <TableCell>\n                        {blog.user.name}\n                      </TableCell>\n                    </TableRow>)\n              : null}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default BlogList\n","import { Alert } from '@material-ui/lab'\nimport React from 'react'\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div>\n      {(message &&\n        <Alert severity=\"success\">\n          {message}\n        </Alert>)}\n    </div>\n  )\n}\n\nexport default Notification\n","const reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const setUser = (user) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_USER',\n      data: user,\n    })\n  }\n}\n\nexport const resetUser = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_USER',\n      data: null,\n    })\n  }\n}\n\nexport default reducer\n","import{\n  AppBar,\n  Button,\n  Toolbar,\n  Typography\n} from '@material-ui/core'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport Notification from './Notification'\nimport React from 'react'\nimport { resetUser } from '../reducers/loginReducer'\nimport { useDispatch } from 'react-redux'\n\nconst Header = ({ message, user }) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleReset = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    dispatch(resetUser())\n    history.push('/login')\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Button color=\"inherit\" component={Link} to=\"/\">\n            blogs\n          </Button>\n          <Button color=\"inherit\" component={Link} to=\"/users\">\n            users\n          </Button>\n          {user ? user.name : null} logged-in\n          <Button id=\"logout-button\" onClick={() => handleReset()}>\n            logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Typography variant=\"h5\">Blog app</Typography>\n      <Notification message={message} />\n    </div>\n  )\n}\n\nexport default Header\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import { Button, TextField, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Notification from '../Notification'\nimport blogService from '../../services/blogs'\nimport loginService from '../../services/login'\nimport { setUser } from '../../reducers/loginReducer'\nimport { useHistory } from 'react-router-dom'\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const message = useSelector((state) => state.notifications)\n  const history = useHistory()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const user = await loginService.login({\n      username,\n      password,\n    })\n\n    window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n\n    blogService.setToken(user.token)\n\n    dispatch(setUser(user))\n\n    setUsername('')\n    setPassword('')\n    history.push('/blog-list')\n  }\n\n  return (\n    <div>\n      <Notification message={message} />\n      <Typography variant=\"h4\">Login</Typography>\n      <form onSubmit={handleLogin}>\n        <div>\n          <TextField\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            label=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            label=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <Button color=\"primary\" id=\"login-button\" type=\"submit\">\n          login\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import { Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core'\n\nimport React from 'react'\nimport { useRouteMatch } from 'react-router-dom'\n\nconst User = ({ blogs }) => {\n  const matchByUser = useRouteMatch('/users/:id')\n  const blogsByUser = matchByUser\n    ? blogs.filter((blog) => blog.user.id === matchByUser.params.id)\n    : null\n\n  if (!blogs[0]) {\n    return null\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h4\">{blogs[0].user.name}</Typography>\n      <Typography variant=\"h5\">Added blogs</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <List dense={true}>\n            {blogsByUser.map((blog) =>\n              <ListItem key={blog.id}>\n                <ListItemText primary={blog.title} />\n              </ListItem>)}\n          </List>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default User\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core'\n\n/* eslint-disable indent */\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nconst Users = ({ users }) => {\n  console.log(users)\n  if (!users[0]) {\n    return null\n  }\n\n  return (\n    <div>\n      <h2>Users</h2>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>\n                <b>blogs created</b>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((user) => (\n                  <TableRow key={user.id}>\n                    <TableCell>\n                      <Link to={`/users/${user.id}`}>{user.name}</Link>\n                    </TableCell>\n                    <TableCell>{user.blogs ? user.blogs.length : 0}</TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default Users\n","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nexport default { getUsers }\n","import userService from '../services/users'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async (dispatch) => {\n    const users = await userService.getUsers()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users,\n    })\n  }\n}\n\nexport default reducer\n","import React, { useEffect } from 'react'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport BlogDetail from './components/Blog/BlogDetail/BlogDetail'\nimport BlogList from './components/Blog/BlogList/BlogList'\nimport Container from '@material-ui/core/Container'\nimport Header from './components/Header'\nimport LoginForm from './components/LoginForm/LoginForm'\nimport User from './components/UserTable/User'\nimport UserTable from './components/UserTable/UserTable'\nimport blogService from './services/blogs'\nimport { initializeBlogs } from './reducers/blogReducer'\nimport { initializeUsers } from './reducers/userReducer'\nimport { setUser } from './reducers/loginReducer'\n\nconst App = () => {\n  const login = useSelector((state) => state.login)\n  const blogs = useSelector((state) => state.blogs)\n  const users = useSelector((state) => state.users)\n  const message = useSelector((state) => state.notifications)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      blogService.setToken(user.token)\n      dispatch(setUser(user))\n    }\n  }, [])\n\n  return (\n    <Container>\n      <Router>\n        <Switch>\n          <Route path=\"/users/:id\">\n            {login ? <Header message={message} user={login} /> : null}\n            <User blogs={blogs} />\n          </Route>\n          <Route path=\"/users\">\n            {login ? <Header message={message} user={login} /> : null}\n            <UserTable users={users} />\n          </Route>\n          <Route path=\"/blogs/:id\">\n            {login ? <Header message={message} user={login} /> : null}\n            <BlogDetail blogs={blogs} />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <Route path=\"/\">\n            {login ? <Header message={message} user={login} /> : null}\n            <BlogList blogs={blogs} />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  )\n}\n\nexport default App\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\n\nimport blogReducer from './reducers/blogReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport loginReducer from './reducers/loginReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport thunk from 'redux-thunk'\nimport userReducer from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  blogs: blogReducer,\n  notifications: notificationReducer,\n  login: loginReducer,\n  users: userReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import './index.css'\n\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}