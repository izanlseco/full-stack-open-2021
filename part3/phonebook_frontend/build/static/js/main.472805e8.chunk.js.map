{"version":3,"sources":["components/Filter.js","components/BookForm.js","components/Persons.js","components/Notification.js","services/phoneNumbers.js","components/App.js","index.js"],"names":["Filter","nameToFilter","handleFilter","value","onChange","BookForm","addPhoneNumber","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","Persons","persons","removeNumber","filter","person","name","toLowerCase","includes","map","number","onClick","id","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setNameToFilter","setMessage","useEffect","personService","returnedPersons","event","console","log","target","preventDefault","filteredPerson","personObject","date","Date","toISOString","length","window","confirm","foundPerson","find","p","changedPerson","returnedPerson","catch","error","setTimeout","returnedNumber","concat","personToRemove","emptyArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.472805e8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ nameToFilter, handleFilter}) => {\n  return (\n    <div>\n      filter shown with: <input\n                          value={nameToFilter}\n                          onChange={handleFilter}/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst BookForm = ({ addPhoneNumber, newName, handleNewName, newNumber, handleNewNumber }) => {\n  return (\n    <form onSubmit={addPhoneNumber}>\n      <div>\n        name: <input \n                value={newName}\n                onChange={handleNewName}/>\n      </div>\n      <div>\n        number: <input \n                  value={newNumber}\n                  onChange={handleNewNumber}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default BookForm","import React from 'react'\n\nconst Persons = ({ persons, nameToFilter, removeNumber }) => {\n  return (\n    <ul>\n      {persons\n        .filter(person => person.name.toLowerCase().includes(nameToFilter.toLowerCase()))\n        .map(person =>\n          <li key={person.id}>\n            {person.name} {person.number}\n            <button onClick={() => removeNumber(person.id)}>delete</button>\n            </li>\n        )}\n    </ul>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={ message === 'Added' ? 'success' : 'error' }>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from \"axios\";\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport BookForm from './BookForm'\nimport Persons from './Persons'\nimport Notification from './Notification'\nimport personService from '../services/phoneNumbers'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameToFilter, setNameToFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(returnedPersons => setPersons(returnedPersons))\n  }, [])\n\n  const addPhoneNumber = (event) => { \n    event.preventDefault()\n\n    let filteredPerson = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      date: new Date().toISOString(),\n    }\n\n    if (filteredPerson.length > 0 && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      const foundPerson = persons.find(p => p.name.toLowerCase() === newName.toLowerCase())\n      const changedPerson = {...foundPerson, number: newNumber}\n\n      personService\n        .update(foundPerson.id, changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== foundPerson.id ? person : returnedPerson))\n        })\n        .catch(error => {\n          setMessage(`${error.response.data.error}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    } else {\n\n      personService\n        .create(personObject)\n        .then(returnedNumber => {\n          setPersons(persons.concat(returnedNumber))\n          setMessage(`Added ${personObject.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setMessage(`${error.response.data.error}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removeNumber = (id) => {\n    if (window.confirm(\"Do you really want to remove this number?\")) {\n      const personToRemove = persons.filter(p => p.id === id)\n      personService\n        .remove(id)\n        .then(emptyArray => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(error => {\n          setMessage(`Information of ${personToRemove.name} has already been removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    console.log(event.target.value)\n    setNameToFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n        <Filter\n          nameToFilter={nameToFilter}\n          handleFilter={handleFilter} />\n      <h2>Add a new</h2>\n        <BookForm\n          addPhoneNumber={addPhoneNumber}\n          newName={newName}\n          handleNewName={handleNewName}\n          newNumber={newNumber}\n          handleNewNumber={handleNewNumber} />\n      <h2>Numbers</h2>\n        <Persons\n          persons={persons}\n          nameToFilter={nameToFilter}\n          removeNumber={removeNumber} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}